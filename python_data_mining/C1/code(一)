#支持度和置信度
import numpy as np
from collections import defaultdict
def print_rule(premise, conclusion,support, confidence, features):
    premise_name = features[premise]
    conclusion_name = features[conclusion]
    print("Rule: If a person buys {0} they will also buy{1}".format(premise_name, conclusion_name))
    print(" - Support: {0}".format(support[(premise,conclusion)]))
    print(" - Confidence: {0:.3f}".format(confidence[(premise,conclusion)]))
dataset_filename = "affinity_dataset.txt"
X = np.loadtxt(dataset_filename)
#print(X[:5])
valid_rules = defaultdict(int)
invalid_rules = defaultdict(int)
num_occurances = defaultdict(int)
features = defaultdict(int)
for sample in X:
  for premise in range(4):
    if sample[premise] == 0: 
        continue
    num_occurances[premise] += 1
    for conclusion in range(4):
        if premise == conclusion: 
            continue
        if sample[conclusion] == 1:
            valid_rules[(premise, conclusion)] += 1
        else :
            invalid_rules[(premise, conclusion)] += 1
support=valid_rules
confidence = defaultdict(float)
for premise, conclusion in valid_rules.keys():
    rule = (premise, conclusion)
    confidence[rule] = valid_rules[rule] / num_occurances[premise]
features = {1: '苹果', 3: '香蕉'};
premise = 1
conclusion = 3
print_rule(premise, conclusion,support, confidence, features)
